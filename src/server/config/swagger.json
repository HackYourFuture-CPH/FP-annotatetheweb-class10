{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "AnnotateTheWeb.API",
    "description": "API documentation for the final project",
    "contact": {}
  },
  "host": "",
  "basePath": "/api",
  "schemes": ["http", "https"],
  "paths": {
    "/users/": {
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Create new user",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["name", "fk_role_id"],
              "properties": {
                "name": {
                  "type": "string"
                },
                "fk_role_id": {
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get a user by user_id",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "The unique user_id",
            "required": true,
            "type": "string",
            "properties": {
              "name": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete a specific user",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "The unique user_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/users/email/{email}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user_id by email",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "The unique email",
            "required": true,
            "type": "string",
            "properties": {
              "name": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/screenshots/": {
      "post": {
        "tags": ["Screenshots"],
        "summary": "Create new screenshot",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Create screenshot",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["url", "height", "width", "fk_project_id"],
              "properties": {
                "url": {
                  "type": "string"
                },
                "height": {
                  "type": "number"
                },
                "width": {
                  "type": "number"
                },
                "fk_project_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "{\"key\":\"[unique key]\"}",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/screenshots/{key}": {
      "get": {
        "tags": ["Screenshots"],
        "summary": "Get a screenshot using a unique key.",
        "operationId": "GetScreenshot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "The unique key for the screenshot",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/projects/": {
      "post": {
        "tags": ["Projects"],
        "summary": "Create new project",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Create new project",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["name", "fk_user_id"],
              "properties": {
                "name": {
                  "type": "string"
                },
                "fk_user_id": {
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },

    "/projects/{project_id}": {
      "get": {
        "tags": ["Projects"],
        "summary": "Get a project by project_id",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The unique project_id",
            "required": true,
            "type": "string",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": ["Projects"],
        "summary": "Update a project",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The unique project_id",
            "required": true,
            "type": "string"
          },
          {
            "name": "Project name",
            "in": "body",
            "description": "Update a project",
            "required": "true",
            "schema": {
              "type": "object",
              "required": ["name"],
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": ["Projects"],
        "summary": "Delete a specific project",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The unique project_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/annotations/": {
      "post": {
        "tags": ["Annotations"],
        "summary": "Create new annotation",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Create annotation",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["title", "description", "area", "fk_screenshot_id"],
              "properties": {
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "area": {
                  "type": "object",
                  "format": "object"
                },
                "fk_screenshot_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/annotations/{annotation_id}": {
      "get": {
        "tags": ["Annotations"],
        "summary": "Check the status of Annotation and return it's value when it is ready",
        "operationId": "Annotation_CheckStatusOnAnnotation",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "annotation_id",
            "in": "path",
            "description": "The unique id for the annotaion",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "patch": {
        "tags": ["Annotations"],
        "summary": "update existing annotation",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "annotation_id",
            "in": "path",
            "description": "The unique annotation_id for the annotation",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Update annotation",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["title", "description"],
              "properties": {
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": ["Annotations"],
        "summery": "Delete specific annotation",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "annotation_id",
            "in": "path",
            "description": " Unique annotation_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/comments/": {
      "post": {
        "tags": ["Comments"],
        "summary": "Create new comment for an annotation",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Create comment",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "description",
                "fk_annotations_id",
                "fk_comments_id",
                "fk_user_id"
              ],
              "properties": {
                "description": {
                  "type": "string"
                },
                "fk_annotations_id": {
                  "type": "integer"
                },
                "fk_comments_id": {
                  "type": "integer"
                },
                "fk_user_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/comments/{comment_id}": {
      "put": {
        "tags": ["Comments"],
        "summary": "Update a comment",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "comment_id",
            "in": "path",
            "description": "The unique comment_id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Update comment for an annotation",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["description"],
              "properties": {
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": ["Comments"],
        "summary": "Delete a comment",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "comment_id",
            "in": "path",
            "description": "The unique comment_id"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/comments/annotation/{annotation_id}": {
      "get": {
        "tags": ["Comments"],
        "summary": "Get all comments for a specific annotation",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "annotation_id",
            "in": "path",
            "description": "The unique annotation_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "definitions": {}
}
